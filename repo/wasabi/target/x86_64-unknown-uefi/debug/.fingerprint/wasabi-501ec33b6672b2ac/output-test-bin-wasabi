{"$message_type":"diagnostic","message":"unused import: `core::arch::asm`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":183,"byte_end":198,"line_start":8,"line_end":8,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use core::arch::asm;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":179,"byte_end":199,"line_start":8,"line_end":8,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use core::arch::asm;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::arch::asm`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::arch::asm;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `offset_of`, `size_of`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":238,"byte_end":247,"line_start":10,"line_end":10,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"use core::mem::{offset_of, size_of};","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":249,"byte_end":256,"line_start":10,"line_end":10,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"use core::mem::{offset_of, size_of};","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":222,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use core::mem::{offset_of, size_of};","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `offset_of`, `size_of`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:10:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::mem::{offset_of, size_of};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::panic::PanicInfo`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":263,"byte_end":285,"line_start":11,"line_end":11,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use core::panic::PanicInfo;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":259,"byte_end":286,"line_start":11,"line_end":11,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use core::panic::PanicInfo;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::panic::PanicInfo`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::panic::PanicInfo;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `wasabi::print::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":336,"byte_end":352,"line_start":14,"line_end":14,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use wasabi::print::*;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":332,"byte_end":353,"line_start":14,"line_end":14,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use wasabi::print::*;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `wasabi::print::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::print::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `EfiMemoryDescriptor`, `SerialPort`, `allocator`, `self`, `self`, `self`, `self`, `self`, `self`, `self`, `trigger_debug_interrupt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":373,"byte_end":382,"line_start":17,"line_end":17,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    allocator, // allocator モジュール全体をインポート。これで `allocator::*` の代わりに `wasabi::allocator::*` を使う","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":528,"byte_end":532,"line_start":18,"line_end":18,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    executor::{self, Executor, Task, TimeoutFuture},","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":581,"byte_end":585,"line_start":19,"line_end":19,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    graphics::{self, draw_test_pattern, fill_rect},","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":629,"byte_end":633,"line_start":20,"line_end":20,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    hpet::{self, global_timestamp, set_global_hpet, Hpet},","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":688,"byte_end":692,"line_start":21,"line_end":21,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    init::{self, init_basic_runtime, init_paging},","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":741,"byte_end":745,"line_start":22,"line_end":22,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    serial::{self, SerialPort},","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":747,"byte_end":757,"line_start":22,"line_end":22,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    serial::{self, SerialPort},","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":817,"byte_end":821,"line_start":25,"line_end":25,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        self, init_vram, locate_loaded_image_protocol, EfiHandle, EfiMemoryDescriptor,","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":875,"byte_end":894,"line_start":25,"line_end":25,"column_start":67,"column_end":86,"is_primary":true,"text":[{"text":"        self, init_vram, locate_loaded_image_protocol, EfiHandle, EfiMemoryDescriptor,","highlight_start":67,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":968,"byte_end":972,"line_start":28,"line_end":28,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"    x86::{self, flush_tlb, init_exceptions, read_cr3, trigger_debug_interrupt, PageAttr},","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1012,"byte_end":1035,"line_start":28,"line_end":28,"column_start":55,"column_end":78,"is_primary":true,"text":[{"text":"    x86::{self, flush_tlb, init_exceptions, read_cr3, trigger_debug_interrupt, PageAttr},","highlight_start":55,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":373,"byte_end":517,"line_start":17,"line_end":18,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    allocator, // allocator モジュール全体をインポート。これで `allocator::*` の代わりに `wasabi::allocator::*` を使う","highlight_start":5,"highlight_end":94},{"text":"    executor::{self, Executor, Task, TimeoutFuture},","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":528,"byte_end":534,"line_start":18,"line_end":18,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"    executor::{self, Executor, Task, TimeoutFuture},","highlight_start":16,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":581,"byte_end":587,"line_start":19,"line_end":19,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"    graphics::{self, draw_test_pattern, fill_rect},","highlight_start":16,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":629,"byte_end":635,"line_start":20,"line_end":20,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    hpet::{self, global_timestamp, set_global_hpet, Hpet},","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":688,"byte_end":694,"line_start":21,"line_end":21,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    init::{self, init_basic_runtime, init_paging},","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":726,"byte_end":758,"line_start":21,"line_end":22,"column_start":50,"column_end":31,"is_primary":true,"text":[{"text":"    init::{self, init_basic_runtime, init_paging},","highlight_start":50,"highlight_end":51},{"text":"    serial::{self, SerialPort},","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":817,"byte_end":823,"line_start":25,"line_end":25,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        self, init_vram, locate_loaded_image_protocol, EfiHandle, EfiMemoryDescriptor,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":873,"byte_end":894,"line_start":25,"line_end":25,"column_start":65,"column_end":86,"is_primary":true,"text":[{"text":"        self, init_vram, locate_loaded_image_protocol, EfiHandle, EfiMemoryDescriptor,","highlight_start":65,"highlight_end":86}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":968,"byte_end":974,"line_start":28,"line_end":28,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    x86::{self, flush_tlb, init_exceptions, read_cr3, trigger_debug_interrupt, PageAttr},","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":1010,"byte_end":1035,"line_start":28,"line_end":28,"column_start":53,"column_end":78,"is_primary":true,"text":[{"text":"    x86::{self, flush_tlb, init_exceptions, read_cr3, trigger_debug_interrupt, PageAttr},","highlight_start":53,"highlight_end":78}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `EfiMemoryDescriptor`, `SerialPort`, `allocator`, `self`, `self`, `self`, `self`, `self`, `self`, `self`, `trigger_debug_interrupt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    allocator, // allocator モジュール全体をインポート。これで `allocator::*` の代わりに `wasabi::allocator::*` を使う\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    executor::{self, Executor, Task, TimeoutFuture},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    graphics::{self, draw_test_pattern, fill_rect},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpet::{self, global_timestamp, set_global_hpet, Hpet},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    init::{self, init_basic_runtime, init_paging},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    serial::{self, SerialPort},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self, init_vram, locate_loaded_image_protocol, EfiHandle, EfiMemoryDescriptor,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    x86::{self, flush_tlb, init_exceptions, read_cr3, trigger_debug_interrupt, PageAttr},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unsize`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unsize`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `structural_peq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `structural_peq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `structural_teq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `structural_teq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `copy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `copy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `clone`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `clone`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sync`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sync`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `discriminant_kind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `discriminant_kind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `discriminant_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `discriminant_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pointee_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pointee_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `metadata_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `metadata_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `dyn_metadata`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `dyn_metadata`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `freeze`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `freeze`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_addr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_addr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `destruct`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `destruct`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coerce_unsized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coerce_unsized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `dispatch_from_dyn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `dispatch_from_dyn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `transmute_opts`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `transmute_opts`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `transmute_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `transmute_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `add`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `add`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sub`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sub`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `mul`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `mul`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `div`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `div`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `rem`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `rem`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `neg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `neg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `not`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `not`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitxor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitxor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitand`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitand`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shl`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shl`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `add_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `add_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sub_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sub_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `mul_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `mul_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `div_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `div_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `rem_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `rem_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitxor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitxor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitand_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitand_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shl_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shl_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shr_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shr_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `index`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `index`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `index_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `index_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unsafe_cell`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unsafe_cell`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `va_list`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `va_list`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref_target`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref_target`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `receiver`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `receiver`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `r#fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `r#fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_once`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_once`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_once_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_once_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `future_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `future_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `async_iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `async_iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coroutine_state`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coroutine_state`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coroutine`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coroutine`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unpin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unpin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `eq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `eq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `partial_ord`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `partial_ord`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `c_void`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `c_void`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_nounwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_nounwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `const_panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `const_panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_bounds_check`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_bounds_check`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_misaligned_pointer_dereference`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_misaligned_pointer_dereference`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_info`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_info`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_location`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_location`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_cannot_unwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_cannot_unwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_in_cleanup`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_in_cleanup`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_alignment`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_alignment`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_argument`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_argument`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_arguments`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_arguments`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_count`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_count`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_placeholder`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_placeholder`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_unsafe_arg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_unsafe_arg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `drop_in_place`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `drop_in_place`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `alloc_layout`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `alloc_layout`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `ptr_unique`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `ptr_unique`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `phantom_data`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `phantom_data`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `manually_drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `manually_drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `maybe_uninit`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `maybe_uninit`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `align_offset`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `align_offset`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Try`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Try`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `tuple_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `tuple_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `slice_len_fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `slice_len_fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_residual`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_residual`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `branch`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `branch`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_yeet`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_yeet`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pointer_like`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pointer_like`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `const_param_ty`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `const_param_ty`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Ready`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Ready`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Pending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Pending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenReady`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenReady`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenPending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenPending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenFinished`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenFinished`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `ResumeTy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `ResumeTy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `get_context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `get_context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `async_iterator_poll_next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `async_iterator_poll_next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_async_iter_into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_async_iter_into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Option`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Option`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Some`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Some`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `None`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `None`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Ok`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Ok`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Err`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Err`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Continue`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Continue`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Break`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Break`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_future`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_future`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `new_unchecked`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `new_unchecked`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeFrom`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeFrom`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeFull`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeFull`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `range_inclusive_new`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `range_inclusive_new`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Range`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Range`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeToInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeToInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeTo`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeTo`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `CStr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `CStr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `exchange_malloc`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `exchange_malloc`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `owned_box`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `owned_box`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `String`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `String`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found duplicate lang item `panic_impl`","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":4759,"byte_end":5429,"line_start":149,"line_end":163,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"fn panic(_info: &core::panic::PanicInfo) -> ! {","highlight_start":1,"highlight_end":48},{"text":"    // パニック時の処理をここに記述","highlight_start":1,"highlight_end":22},{"text":"    // 例: エラーメッセージをシリアルポートに出力、画面に表示するなど","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // デバッグ目的でパニック情報を表示することもできます","highlight_start":1,"highlight_end":33},{"text":"    // use wasabi::print::println; // 必要ならインポート","highlight_start":1,"highlight_end":48},{"text":"    // println!(\"Panicked: {:?}\", _info);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // 致命的なエラーなので、CPUを停止させる","highlight_start":1,"highlight_end":28},{"text":"    loop {","highlight_start":1,"highlight_end":11},{"text":"        // パニックしたら無限ループで停止","highlight_start":1,"highlight_end":27},{"text":"        // CPUを停止させる `hlt` 命令があるならそれを使う","highlight_start":1,"highlight_end":40},{"text":"        wasabi::x86::hlt(); // wasabi::x86::hlt() を呼び出す","highlight_start":1,"highlight_end":56},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lang item is first defined in crate `std` (which `test` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in the local crate (`wasabi`)","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: found duplicate lang item `panic_impl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:149:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn panic(_info: &core::panic::PanicInfo) -> ! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // パニック時の処理をここに記述\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // 例: エラーメッセージをシリアルポートに出力、画面に表示するなど\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `std` (which `test` depends on)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in the local crate (`wasabi`)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 132 previous errors; 5 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 132 previous errors; 5 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0152`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0152`.\u001b[0m\n"}
