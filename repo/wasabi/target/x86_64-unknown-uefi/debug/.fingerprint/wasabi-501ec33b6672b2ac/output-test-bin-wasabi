{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unsize`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unsize`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `structural_peq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `structural_peq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `structural_teq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `structural_teq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `copy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `copy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `clone`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `clone`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sync`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sync`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `discriminant_kind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `discriminant_kind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `discriminant_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `discriminant_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pointee_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pointee_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `metadata_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `metadata_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `dyn_metadata`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `dyn_metadata`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `freeze`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `freeze`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_addr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_ptr_addr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `destruct`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `destruct`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coerce_unsized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coerce_unsized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `dispatch_from_dyn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `dispatch_from_dyn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `transmute_opts`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `transmute_opts`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `transmute_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `transmute_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `add`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `add`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sub`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sub`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `mul`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `mul`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `div`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `div`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `rem`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `rem`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `neg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `neg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `not`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `not`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitxor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitxor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitand`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitand`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shl`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shl`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `add_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `add_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `sub_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `sub_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `mul_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `mul_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `div_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `div_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `rem_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `rem_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitxor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitxor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitand_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitand_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `bitor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `bitor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shl_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shl_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `shr_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `shr_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `index`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `index`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `index_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `index_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unsafe_cell`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unsafe_cell`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `va_list`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `va_list`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `deref_target`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `deref_target`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `receiver`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `receiver`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `r#fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `r#fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_once`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_once`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `fn_once_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `fn_once_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `future_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `future_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `async_iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `async_iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coroutine_state`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coroutine_state`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `coroutine`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `coroutine`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `unpin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `unpin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `eq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `eq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `partial_ord`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `partial_ord`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `c_void`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `c_void`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_nounwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_nounwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `const_panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `const_panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_bounds_check`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_bounds_check`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_misaligned_pointer_dereference`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_misaligned_pointer_dereference`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_info`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_info`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_location`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_location`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_cannot_unwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_cannot_unwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `panic_in_cleanup`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `panic_in_cleanup`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_alignment`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_alignment`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_argument`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_argument`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_arguments`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_arguments`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_count`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_count`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_placeholder`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_placeholder`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `format_unsafe_arg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `format_unsafe_arg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `drop_in_place`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `drop_in_place`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `alloc_layout`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `alloc_layout`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `ptr_unique`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `ptr_unique`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `phantom_data`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `phantom_data`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `manually_drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `manually_drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `maybe_uninit`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `maybe_uninit`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `align_offset`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `align_offset`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Try`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Try`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `tuple_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `tuple_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `slice_len_fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `slice_len_fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_residual`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_residual`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `branch`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `branch`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `from_yeet`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `from_yeet`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `pointer_like`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `pointer_like`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `const_param_ty`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `const_param_ty`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Ready`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Ready`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Pending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Pending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenReady`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenReady`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenPending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenPending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `AsyncGenFinished`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `AsyncGenFinished`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `ResumeTy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `ResumeTy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `get_context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `get_context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `async_iterator_poll_next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `async_iterator_poll_next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_async_iter_into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_async_iter_into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Option`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Option`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Some`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Some`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `None`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `None`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Ok`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Ok`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Err`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Err`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Continue`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Continue`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Break`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Break`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_future`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_future`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `new_unchecked`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `new_unchecked`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeFrom`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeFrom`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeFull`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeFull`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `range_inclusive_new`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `range_inclusive_new`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `Range`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `Range`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeToInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeToInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `RangeTo`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `RangeTo`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `std` depends on): `CStr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `std` depends on): `CStr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `exchange_malloc`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `exchange_malloc`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `owned_box`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `owned_box`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `alloc` (which `std` depends on): `String`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `alloc` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `alloc` (which `std` depends on): `String`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `alloc` (which `wasabi` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `alloc` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/liballoc-ac66c8ffc9e275f8.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `alloc` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/liballoc-2ce37e6bf15a8b30.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found duplicate lang item `panic_impl`","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3045,"byte_end":3146,"line_start":94,"line_end":97,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"fn panic(info: &PanicInfo) -> ! {","highlight_start":1,"highlight_end":34},{"text":"    error!(\"PANIC: {info:?}\");","highlight_start":1,"highlight_end":31},{"text":"    exit_qemu(QemuExitCode::Fail);","highlight_start":1,"highlight_end":35},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lang item is first defined in crate `std` (which `test` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in the local crate (`wasabi`)","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: found duplicate lang item `panic_impl`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:94:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn panic(info: &PanicInfo) -> ! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error!(\"PANIC: {info:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    exit_qemu(QemuExitCode::Fail);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `std` (which `test` depends on)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in the local crate (`wasabi`)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple applicable items in scope","code":{"code":"E0034","explanation":"The compiler doesn't know what method to call because more than one method\nhas the same prototype.\n\nErroneous code example:\n\n```compile_fail,E0034\nstruct Test;\n\ntrait Trait1 {\n    fn foo();\n}\n\ntrait Trait2 {\n    fn foo();\n}\n\nimpl Trait1 for Test { fn foo() {} }\nimpl Trait2 for Test { fn foo() {} }\n\nfn main() {\n    Test::foo() // error, which foo() to call?\n}\n```\n\nTo avoid this error, you have to keep only one of them and remove the others.\nSo let's take our example and fix it:\n\n```\nstruct Test;\n\ntrait Trait1 {\n    fn foo();\n}\n\nimpl Trait1 for Test { fn foo() {} }\n\nfn main() {\n    Test::foo() // and now that's good!\n}\n```\n\nHowever, a better solution would be using fully explicit naming of type and\ntrait:\n\n```\nstruct Test;\n\ntrait Trait1 {\n    fn foo();\n}\n\ntrait Trait2 {\n    fn foo();\n}\n\nimpl Trait1 for Test { fn foo() {} }\nimpl Trait2 for Test { fn foo() {} }\n\nfn main() {\n    <Test as Trait1>::foo()\n}\n```\n\nOne last example:\n\n```\ntrait F {\n    fn m(&self);\n}\n\ntrait G {\n    fn m(&self);\n}\n\nstruct X;\n\nimpl F for X { fn m(&self) { println!(\"I am F\"); } }\nimpl G for X { fn m(&self) { println!(\"I am G\"); } }\n\nfn main() {\n    let f = X;\n\n    F::m(&f); // it displays \"I am F\"\n    G::m(&f); // it displays \"I am G\"\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2756,"byte_end":2764,"line_start":81,"line_end":81,"column_start":31,"column_end":39,"is_primary":true,"text":[{"text":"                let c = char::from_u32(v as u32);","highlight_start":31,"highlight_end":39}],"label":"multiple `from_u32` found","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"candidate #1 is defined in an impl for the type `char`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"candidate #2 is defined in an impl for the type `char`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0034]\u001b[0m\u001b[0m\u001b[1m: multiple applicable items in scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:81:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let c = char::from_u32(v as u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmultiple `from_u32` found\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: candidate #1 is defined in an impl for the type `char`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: candidate #2 is defined in an impl for the type `char`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 133 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 133 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0034, E0152.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0034, E0152.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0034`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0034`.\u001b[0m\n"}
