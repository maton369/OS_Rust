{"$message_type":"diagnostic","message":"attempted to define built-in macro more than once","code":{"code":"E0773","explanation":"A builtin-macro was defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0773\n#![feature(decl_macro)]\n#![feature(rustc_attrs)]\n#![allow(internal_features)]\n\n#[rustc_builtin_macro]\npub macro test($item:item) {\n    /* compiler built-in */\n}\n\nmod inner {\n    #[rustc_builtin_macro]\n    pub macro test($item:item) {\n        /* compiler built-in */\n    }\n}\n```\n\nTo fix the issue, remove the duplicate declaration:\n\n```\n#![feature(decl_macro)]\n#![feature(rustc_attrs)]\n#![allow(internal_features)]\n\n#[rustc_builtin_macro]\npub macro test($item:item) {\n    /* compiler built-in */\n}\n```\n\nIn very rare edge cases, this may happen when loading `core` or `std` twice,\nonce with `check` metadata and once with `build` metadata.\nFor more information, see [#75176].\n\n[#75176]: https://github.com/rust-lang/rust/pull/75176#issuecomment-683234468\n"},"level":"error","spans":[{"file_name":"/Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":48770,"byte_end":48786,"line_start":1415,"line_end":1415,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    macro_rules! cfg {","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"previously defined here","code":null,"level":"note","spans":[{"file_name":"/Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":48770,"byte_end":48786,"line_start":1415,"line_end":1415,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    macro_rules! cfg {","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0773]\u001b[0m\u001b[0m\u001b[1m: attempted to define built-in macro more than once\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:1415:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    macro_rules! cfg {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: previously defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs:1415:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    macro_rules! cfg {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":275,"byte_end":281,"line_start":6,"line_end":6,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::graphics::fill_rect; // 長方形塗りつぶし関数","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::graphics::fill_rect; // 長方形塗りつぶし関数\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":342,"byte_end":348,"line_start":7,"line_end":7,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::graphics::Bitmap; // ビットマップ型","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::graphics::Bitmap; // ビットマップ型\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":397,"byte_end":403,"line_start":8,"line_end":8,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::qemu::exit_qemu; // QEMU からの終了関数","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::qemu::exit_qemu; // QEMU からの終了関数\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":456,"byte_end":462,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::qemu::QemuExitCode; // QEMU の終了コード","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::qemu::QemuExitCode; // QEMU の終了コード\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":515,"byte_end":521,"line_start":10,"line_end":10,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::exit_boot_services; // UEFI ブートサービスからの終了関数","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::exit_boot_services; // UEFI ブートサービスからの終了関数\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":604,"byte_end":610,"line_start":11,"line_end":11,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::init_vram; // VRAM 初期化関数","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::init_vram; // VRAM 初期化関数\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":657,"byte_end":663,"line_start":12,"line_end":12,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::EfiHandle; // UEFI ハンドル型","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::EfiHandle; // UEFI ハンドル型\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":716,"line_start":13,"line_end":13,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::EfiMemoryType; // UEFI メモリタイプ","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::EfiMemoryType; // UEFI メモリタイプ\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":770,"byte_end":776,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::EfiSystemTable; // UEFI システムテーブル型","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::EfiSystemTable; // UEFI システムテーブル型\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":840,"byte_end":846,"line_start":15,"line_end":15,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::MemoryMapHolder; // メモリマップホルダー型","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::MemoryMapHolder; // メモリマップホルダー型\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":912,"byte_end":918,"line_start":16,"line_end":16,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::uefi::VramTextWriter; // VRAM テキストライター型","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::uefi::VramTextWriter; // VRAM テキストライター型\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `wasabi`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":982,"byte_end":988,"line_start":17,"line_end":17,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use wasabi::x86::hlt; // CPU 停止命令","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `wasabi`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `wasabi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasabi::x86::hlt; // CPU 停止命令\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `wasabi`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::graphics`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":88,"byte_end":96,"line_start":3,"line_end":3,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use crate::graphics::draw_test_pattern; // テストパターン描画関数","highlight_start":12,"highlight_end":20}],"label":"could not find `graphics` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::graphics`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::graphics::draw_test_pattern; // テストパターン描画関数\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `graphics` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `EfiStatus` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2646,"byte_end":2655,"line_start":55,"line_end":55,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let status: EfiStatus = efi_system_table","highlight_start":17,"highlight_end":26}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `EfiStatus` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:55:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let status: EfiStatus = efi_system_table\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `sized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `sized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `unsize`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `unsize`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `structural_peq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `structural_peq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `structural_teq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `structural_teq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `copy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `copy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `clone`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `clone`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `sync`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `sync`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `discriminant_kind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `discriminant_kind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `discriminant_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `discriminant_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `pointee_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `pointee_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `metadata_type`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `metadata_type`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `dyn_metadata`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `dyn_metadata`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `freeze`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `freeze`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `fn_ptr_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `fn_ptr_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `fn_ptr_addr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `fn_ptr_addr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `destruct`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `destruct`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `coerce_unsized`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `coerce_unsized`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `dispatch_from_dyn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `dispatch_from_dyn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `transmute_opts`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `transmute_opts`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `transmute_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `transmute_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `add`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `add`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `sub`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `sub`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `mul`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `mul`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `div`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `div`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `rem`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `rem`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `neg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `neg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `not`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `not`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitxor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitxor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitand`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitand`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitor`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitor`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `shl`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `shl`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `shr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `shr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `add_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `add_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `sub_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `sub_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `mul_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `mul_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `div_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `div_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `rem_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `rem_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitxor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitxor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitand_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitand_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `bitor_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `bitor_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `shl_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `shl_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `shr_assign`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `shr_assign`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `index`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `index`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `index_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `index_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `unsafe_cell`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `unsafe_cell`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `va_list`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `va_list`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `deref`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `deref`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `deref_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `deref_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `deref_target`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `deref_target`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `receiver`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `receiver`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `r#fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `r#fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `fn_mut`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `fn_mut`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `fn_once`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `fn_once`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `fn_once_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `fn_once_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `future_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `future_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `async_iterator`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `async_iterator`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `coroutine_state`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `coroutine_state`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `coroutine`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `coroutine`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `unpin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `unpin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `pin`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `pin`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `eq`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `eq`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `partial_ord`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `partial_ord`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `c_void`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `c_void`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_nounwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_nounwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `const_panic_fmt`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `const_panic_fmt`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_bounds_check`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_bounds_check`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_misaligned_pointer_dereference`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_misaligned_pointer_dereference`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_info`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_info`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_location`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_location`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_cannot_unwind`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_cannot_unwind`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `panic_in_cleanup`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `panic_in_cleanup`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_alignment`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_alignment`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_argument`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_argument`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_arguments`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_arguments`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_count`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_count`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_placeholder`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_placeholder`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `format_unsafe_arg`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `format_unsafe_arg`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `drop_in_place`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `drop_in_place`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `alloc_layout`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `alloc_layout`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `ptr_unique`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `ptr_unique`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `phantom_data`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `phantom_data`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `manually_drop`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `manually_drop`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `maybe_uninit`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `maybe_uninit`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `align_offset`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `align_offset`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Try`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Try`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `tuple_trait`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `tuple_trait`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `slice_len_fn`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `slice_len_fn`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `from_residual`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `from_residual`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `from_output`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `from_output`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `branch`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `branch`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `from_yeet`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `from_yeet`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `pointer_like`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `pointer_like`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `const_param_ty`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `const_param_ty`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Ready`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Ready`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Pending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Pending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenReady`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenReady`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenPending`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenPending`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenFinished`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `AsyncGenFinished`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `ResumeTy`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `ResumeTy`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `get_context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `get_context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Context`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Context`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `poll`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `poll`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `async_iterator_poll_next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `async_iterator_poll_next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `into_async_iter_into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `into_async_iter_into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Option`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Option`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Some`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Some`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `None`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `None`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Ok`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Ok`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Err`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Err`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Continue`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Continue`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Break`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Break`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `into_future`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `into_future`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `into_iter`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `into_iter`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `next`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `next`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `new_unchecked`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `new_unchecked`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `RangeFrom`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `RangeFrom`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `RangeFull`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `RangeFull`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `RangeInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `RangeInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `range_inclusive_new`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `range_inclusive_new`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `Range`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `Range`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `RangeToInclusive`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `RangeToInclusive`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `RangeTo`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `RangeTo`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `core` (which `wasabi` depends on): `CStr`.","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `core` (which `std` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `core` (which `wasabi` depends on): `CStr`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `core` (which `std` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `core` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libcore-40d09b8221dcca96.rlib\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `core` loaded from /Users/maton/OS_Rust/repo/wasabi/target/x86_64-unknown-uefi/debug/deps/libcore-7e5f91884be573f6.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found duplicate lang item `panic_impl`","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":4776,"byte_end":4926,"line_start":103,"line_end":108,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"fn panic(_info: &PanicInfo) -> ! {","highlight_start":1,"highlight_end":35},{"text":"    exit_qemu(QemuExitCode::Fail);","highlight_start":1,"highlight_end":35},{"text":"    loop {","highlight_start":1,"highlight_end":11},{"text":"        // 永遠にここで停止して `!` 型を満たす","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lang item is first defined in crate `std` (which `wasabi` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in the local crate (`wasabi`)","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m: found duplicate lang item `panic_impl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:103:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn panic(_info: &PanicInfo) -> ! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    exit_qemu(QemuExitCode::Fail);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // 永遠にここで停止して `!` 型を満たす\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `std` (which `wasabi` depends on)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `std` loaded from /Users/maton/.rustup/toolchains/nightly-2024-01-01-aarch64-apple-darwin/lib/rustlib/x86_64-unknown-uefi/lib/libstd-891794ada4c89111.rlib\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in the local crate (`wasabi`)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 144 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 144 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0152, E0412, E0432, E0433, E0773.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0152, E0412, E0432, E0433, E0773.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0152`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0152`.\u001b[0m\n"}
